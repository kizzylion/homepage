{"version":3,"file":"main.bundle.js","mappings":"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","sources":["webpack://battleship/./src/bin2/domevents.js","webpack://battleship/./src/bin2/game.js","webpack://battleship/./src/modules/factories/Gameboard.js","webpack://battleship/./src/modules/factories/Ship.js","webpack://battleship/./src/modules/DOM/utilities.js","webpack://battleship/./src/modules/comDom.js","webpack://battleship/./src/modules/playerDom.js"],"sourcesContent":["// Get the computed style of the :root element\nconst bodyStyle = getComputedStyle(document.body)\n\n// Get the value of the --cell-size variable\nconst cellSize = parseFloat(bodyStyle.getPropertyValue(\"--cell-size\").trim())\n\n// test\nconsole.log(\"Cell size:\", cellSize)\nmodule.exports = { drawCanvas, cellSize }\n\nfunction drawCanvas(elem, color) {\n  let board = []\n  let col = 10\n  let row = 10\n  let spaceSize = cellSize\n  // we will give every space a unique id\n  let id = 0\n  //so that when i click on a space, i know the space i clicked on\n\n  for (let i = 0; i < row; i++) {\n    board[i] = []\n    for (let j = 0; j < col; j++) {\n      //set id for every space\n      board[i][j] = id\n      id++\n\n      //draw the space\n      elem.strokeStyle = color\n      elem.strokeRect(j * spaceSize, i * spaceSize, spaceSize, spaceSize)\n    }\n  }\n}\n\n// dragFunction()\nmodule.exports = { drawCanvas, cellSize }\n","export function htmlStructure() {\n  return (document.body.innerHTML = `\n\n    <Header class=\"flex items-center max-w-7xl  w-full mx-auto mt-10 mb-4\" >\n        <h1 id=\"Logo\" class=\"text-2xl mr-5\"><img id=\"logo\"/>Kiz BattleShip </h1>\n        <div class=\"screen flex px-4 py-3 bg-gray-200 text-sm max-w-xl w-full rounded-md\">\n            <p id=\"message\">Start editing to see some magic happen </p>\n        </div>\n    </Header>\n    \n    <main id=\"body-container\" class=\" flex max-xl mx-auto max-w-7xl w-full h-full mt-12\">\n        \n        <div id=\"battlefield-2\" class=\"hidden board w-1/2\">\n            <canvas id=\"computerboard\" class=\"\" width=\"360\" height=\"360\"></canvas>\n        </div>\n\n    </main>\n\n\n    <footer class=\" max-w-7xl w-full mx-auto py-1\">\n        <p class=\"text-center text-sm\">\n           \n            <a target=\"_blank\" href=\"https://github.com/kizzylion/battleship\"><i class=\"fa-brands fa-github\"></i> Kizzylion</a>\n        </p>\n    </footer>\n\n    `)\n}\nexport function getRandomDirection() {\n  return Math.random() < 0.5 ? \"horizontal\" : \"vertical\"\n}\nexport function getRandomNumber() {\n  return Math.floor(Math.random() * 10)\n}\n\nexport function canPlaceShip(\n  board,\n  xPosition,\n  yPosition,\n  shipLength,\n  direction,\n  cellSize\n) {\n  let xCord = parseInt(xPosition / cellSize)\n  let yCord = parseInt(yPosition / cellSize)\n\n  if (direction === \"horizontal\") {\n    //check if ship can fit horizontal\n    if (xCord % 10 <= 10 - shipLength) {\n      for (let i = 0; i < shipLength; i++) {\n        let space = board[yCord][xCord + i]\n        if (space) {\n          return false\n        }\n      }\n      return true\n    }\n    return false\n  } else if (direction === \"vertical\") {\n    //check if ship can fit vertical\n    if (yCord % 10 <= 10 - shipLength) {\n      for (let i = 0; i < shipLength; i++) {\n        let space = board[yCord + i][xCord]\n        if (space) {\n          return false\n        }\n      }\n      return true\n    }\n    return false\n  }\n}\n","const { data } = require(\"autoprefixer\")\nconst { Ship } = require(\"./Ship\")\nconst { isColliding, isWithinBounds, orientation } = require(\"../playerDom\")\nclass Gameboard {\n  constructor() {\n    this.opponentName,\n      (this.ships = [\n        new Ship(\"carrier\", 4),\n        new Ship(\"battleship\", 3),\n        new Ship(\"destroyer\", 2),\n        new Ship(\"submarine\", 2),\n        new Ship(\"patrol\", 1),\n      ])\n    this.missedShots = new Set()\n    this.positionShot = new Set()\n    this.board = Array(10)\n      .fill(null)\n      .map(() => Array(10).fill(null))\n    this.hitShot = new Set()\n  }\n\n  setOpponentName(name) {\n    this.playerName = name\n  }\n  getOpponentName() {\n    return this.playerName\n  }\n  _hash(key) {\n    if (key === \"carrier\") return 0\n    if (key === \"battleship\") return 1\n    if (key === \"destroyer\") return 2\n    if (key === \"submarine\") return 3\n    if (key === \"patrol\") return 4\n  }\n\n  placeShip(ship, startX, startY, direction) {\n    const shipLength = ship.length\n\n    // Check if the ship placement is within bounds\n    if (direction === \"horizontal\") {\n      if (\n        startX + shipLength > this.board[0].length ||\n        startY >= this.board.length\n      )\n        return false\n    } else if (direction === \"vertical\") {\n      if (\n        startY + shipLength > this.board.length ||\n        startX >= this.board[0].length\n      )\n        return false\n    }\n\n    // Check if the placement is not colliding with another ship\n    for (let i = 0; i < shipLength; i++) {\n      if (direction === \"horizontal\") {\n        if (this.board[startY][startX + i]) return false\n      } else if (direction === \"vertical\") {\n        if (this.board[startY + i][startX]) return false\n      }\n    }\n\n    if (direction === \"horizontal\") {\n      for (let i = 0; i < shipLength; i++) {\n        this.board[startY][startX + i] = ship\n      }\n    } else if (direction === \"vertical\") {\n      for (let i = 0; i < shipLength; i++) {\n        this.board[startY + i][startX] = ship\n      }\n    }\n\n    this.ships.push(ship)\n  }\n\n  receiveAttack(x, y) {\n    const target = this.board[y][x]\n    if (target) {\n      this.addToPositionShot([x, y])\n      this.hitShot.add([x, y].toString())\n      target.hit()\n    } else {\n      this.missedShots.add([x, y].toString())\n      this.addToPositionShot([x, y])\n    }\n  }\n\n  addToPositionShot(array) {\n    const string = array.toString()\n    this.positionShot.add(string)\n  }\n  removeShip(shipName, x, y, shipLength, direction) {\n    const ship = this.getShip(shipName)\n\n    for (let i = 0; i < shipLength; i++) {\n      if (direction === \"horizontal\" && this.board[y][x + i] === ship) {\n        this.board[y][x + i] = null\n      } else if (direction === \"vertical\" && this.board[y + i][x] === ship) {\n        this.board[y + i][x] = null\n      }\n    }\n  }\n\n  allShipSunk() {\n    return this.ships.every((ship) => ship.isSunk())\n  }\n\n  getShip(key) {\n    return this.ships[this._hash(key)]\n  }\n\n  calculateNewPosition(e, canvas, draggedToken) {\n    let newX = e.clientX - canvas.getBoundingClientRect().x\n    let newY = e.clientY - canvas.getBoundingClientRect().y\n\n    const width = draggedToken.clientWidth\n    const height = draggedToken.clientHeight\n\n    newX = Math.max(0, Math.min(newX, canvas.width - width))\n    newY = Math.max(0, Math.min(newY, canvas.height - height))\n\n    newX = Math.floor(newX / 36) * 36\n    newY = Math.floor(newY / 36) * 36\n\n    return { x: newX, y: newY }\n  }\n\n  clearBoard() {\n    this.board = Array(10)\n      .fill(null)\n      .map(() => Array(10).fill(null))\n  }\n\n  getBoard() {\n    return this.board\n  }\n\n  checkIfPositionHasBeenHit(position) {\n    return this.positionShot.has(position.toString())\n  }\n}\n\nmodule.exports = { Gameboard }\n","class Ship {\n  constructor(name, length) {\n    this.name = name\n    this.length = length\n    this.direction = \"horizontal\"\n    this.hits = 0\n    this.sunk = false\n    this.top = null\n    this.left = null\n  }\n\n  hit() {\n    this.hits++\n  }\n\n  isSunk() {\n    this.sunk = this.hits >= this.length\n    return this.sunk\n  }\n\n  shipUi() {\n    const shipPort = document.querySelector(`.${this.name}-port`)\n\n    if (this.top === 0 || this.top)\n      shipPort.appendChild(\n        createTokenDiv(\n          this.name,\n          this.direction,\n          this.length,\n          this.left,\n          this.top\n        )\n      )\n    else\n      shipPort.appendChild(\n        createTokenDiv(\n          this.name,\n          this.direction,\n          this.length,\n          this.left,\n          this.top\n        )\n      )\n    // return (shipPort.innerHTML = `<div data-name=\"${this.name}\" data-direction=\"horizontal\" data-length=\"${this.length}\" draggable=\"true\" class=\"${this.name} token\"></div>`)\n  }\n}\n\nmodule.exports = { Ship, createTokenDiv }\n\nfunction createTokenDiv(name, direction, length, left, top) {\n  // Create a new div element\n  const div = document.createElement(\"div\")\n\n  // Set the attributes\n  div.setAttribute(\"data-name\", name)\n  div.setAttribute(\"data-direction\", direction)\n  div.setAttribute(\"data-length\", length)\n  div.setAttribute(\"draggable\", \"true\")\n  // div.setAttribute(\"width\", `${length * 36}px`)\n\n  // Set the class\n  div.className = `${name} token`\n\n  // Set the style\n  div.style.left = `${left}px`\n  div.style.top = `${top}px`\n\n  return div\n}\n","import { cellSize } from \"../../bin2/domevents\"\nimport xSrc from \"../../asset/images/X.png\"\nimport dotSrc from \"../../asset/images/dot.png\"\nimport dot2Src from \"../../asset/images/dot2.png\"\nimport shotSoundSrc from \"../../asset/sound/shot.mp3\"\nimport hitSoundSrc from \"../../asset/sound/hit.mp3\"\nimport missSoundSrc from \"../../asset/sound/miss.mp3\"\nimport { createTokenDiv } from \"../factories/Ship\"\nimport Typed from \"typed.js\"\nimport { info } from \"autoprefixer\"\n\n//load x and dot images for canvas\nconst xImage = new Image()\nxImage.src = xSrc\nconst dotImage = new Image()\ndotImage.src = dotSrc\nconst dot2Image = new Image()\ndot2Image.src = dot2Src\n//load audios\nconst hitSound = new Audio(hitSoundSrc)\nhitSound.playbackRate = 1.5\nconst shotSound = new Audio(shotSoundSrc)\nshotSound.playbackRate = 1.5\nconst missSound = new Audio(missSoundSrc)\nmissSound.playbackRate = 1.5\n\n// function that returns an element by id from the dom\nexport function getElementById(id) {\n  return document.getElementById(id)\n}\n//function that gets all the class\nexport function querySelectorAll(className) {\n  return document.querySelectorAll(`.${className}`)\n}\n//function that get element by class\nfunction getElementByClass(className) {\n  return [...document.getElementsByClassName(className)]\n}\n// function that hides a element\nexport function hideElement(element) {\n  element.style.display = \"none\"\n}\nfunction showElement(element) {\n  element.style.display = \"block\"\n}\nexport function flexElement(element) {\n  element.style.display = \"flex\"\n}\nfunction resetMain() {\n  const main = getElementById(\"body-container\")\n  main = \"\"\n}\n\nexport function createElement(string) {\n  return document.createElement(string)\n}\nexport function playerShoot(\n  event,\n  canvas,\n  ctx,\n  cellSize,\n  board,\n  placeable,\n  gameboard\n) {\n  //   if (game_over) return\n  //X & Y position of the mouse click relative to the canvas\n  //event.client show the click position relative to the viewport\n  //cvs.getBoundaringClientRec show the position of the canvas in the view port\n  let X = event.clientX - canvas.getBoundingClientRect().x\n  let Y = event.clientY - canvas.getBoundingClientRect().y\n\n  //we calculated i & j of the clicked canvas\n  let top = Math.floor(Y / cellSize)\n  let left = Math.floor(X / cellSize)\n  let position = [left, top]\n  //check if position have been hit\n  if (gameboard.checkIfPositionHasBeenHit(position)) return true\n\n  let id = board[top][left]\n  // console.log(`top= ${top} , left = ${left}`, `id =`, id)\n  playShotSound()\n  return drawOnBoard(id, ctx, left, top, placeable, gameboard)\n}\n\nexport function computerShoot(opponent, ctx, position, placeable) {\n  let randomPosition = position\n\n  while (opponent.checkIfPositionHasBeenHit(Object.values(randomPosition))) {\n    console.log(\"position has been shot\")\n    randomPosition = randomCell()\n  }\n\n  const top = position.y\n  const left = position.x\n\n  let id = opponent.board[top][left]\n\n  console.log(`top= ${top} , left = ${left}, id = ${id}`)\n  playShotSound()\n  return drawOnBoard(id, ctx, left, top, placeable, opponent)\n}\n\nfunction drawOnBoard(result, ctx, left, top, placeable, gameboard) {\n  const img = result\n    ? xImage\n    : gameboard.getOpponentName() === \"Computer\"\n    ? dot2Image\n    : dotImage\n  ctx.drawImage(img, left * cellSize, top * cellSize, cellSize, cellSize)\n  gameboard.receiveAttack(left, top)\n  if (result) {\n    if (result.isSunk()) {\n      const tokenDiv = createTokenDiv(\n        result.name,\n        result.direction,\n        result.length,\n        result.left,\n        result.top\n      )\n      tokenDiv.style.position = \"absolute\"\n      tokenDiv.setAttribute(\"draggable\", false)\n      tokenDiv.style.cursor = \"default\"\n      tokenDiv.classList.add(\"bgImg\")\n      if (result.direction === \"vertical\") tokenDiv.classList.add(\"vertical\")\n      placeable.classList.add(\"bringFront\")\n      placeable.appendChild(tokenDiv)\n    }\n    playHitSound()\n    if (gameboard.allShipSunk()) {\n      displayGameOverDialogue(gameboard)\n    }\n    return true\n  }\n\n  playMissSound()\n  return false\n}\nexport function randomCell() {\n  const randomX = Math.floor(Math.random() * 10)\n  const randomY = Math.floor(Math.random() * 10)\n  return { x: randomX, y: randomY }\n}\n\nfunction playHitSound() {\n  hitSound.currentTime = 0\n  hitSound.play()\n}\n\nfunction playMissSound() {\n  missSound.currentTime = 0\n  missSound.play()\n}\n\nfunction playShotSound() {\n  shotSound.currentTime = 0\n  shotSound.play()\n}\n\nfunction displayGameOverDialogue(gameboard) {\n  const dialog = createElement(\"dialogue\")\n  dialog.setAttribute(\"id\", \"dialogue\")\n  dialog.setAttribute(\"class\", \"dialogue\")\n  dialog.classList.add(\n    \"flex\",\n    \"justify-center\",\n    \"items-center\",\n    \"bg-blue-900/80\"\n  )\n  getElementById(\"body-container\").appendChild(dialog)\n\n  dialog.innerHTML = `\n        <div class=\"sm:w-3/4 lg:w-3/4 h-fit p-10 bg-gray-900/60 border bottom-1 border-blue-600/50 rounded-2xl shadow-2xl\">\n            <h1 class=\"text-center text-5xl text-blue-100 mb-4 font-semibold\">Game Over!</h1>\n            <p id=\"winnerInfo\" class=\"text-center text-2xl text-blue-500 mb-12 mt-10 font-mono\"></p>\n            <div id=\"restartBtn\" class=\"flex w-fit px-5 py-2 bg-gray-900 hover:bg-white hover:text-gray-950 rounded-lg  mt-4 shadow-md mx-auto text-white font-thin cursor-pointer\">Restart</div>\n        </div>\n    `\n\n  const winnerMessage = [`${gameboard.getOpponentName()} has won the battle`]\n  newMessage(\"winnerInfo\", winnerMessage)\n  document.body.classList.add(\"no-scroll\")\n  const restartBtn = getElementById(\"restartBtn\")\n  restartBtn.addEventListener(\"click\", () => {\n    location.reload()\n  })\n}\n\nlet typedInstance = null\nexport function newMessage(element, array, loop = false, typeSpeed = 50) {\n  if (typedInstance) {\n    typedInstance.destroy()\n    typedInstance = null\n  }\n\n  typedInstance = new Typed(getElementById(element), {\n    strings: array,\n    typeSpeed: typeSpeed,\n    backSpeed: 25, // Speed of backspacing\n    backDelay: 3000, // Delay before starting to backspace\n    loop: loop,\n  })\n}\n","import {\n  getElementById,\n  createElement,\n  playerShoot,\n  computerShoot,\n  randomCell,\n} from \"./DOM/utilities\"\n\nconst { Gameboard } = require(\"./factories/Gameboard\")\n\nimport { cellSize, drawCanvas } from \"../bin2/domevents\"\nimport { playerboard, computerBoard } from \"./playerDom\"\nimport { getRandomDirection, getRandomNumber, canPlaceShip } from \"../bin2/game\"\n\nlet isHunting = true\nlet targetCells = []\nlet lastHitCell = null\n\nexport function initializeComputer() {\n  getElementById(\"field\").classList.replace(\"flex-col\", \"flex-row\")\n  getElementById(\"field\").classList.add(\"gap-6\", \"begin\")\n  generateComputerBoardUi()\n\n  const computerCvs = getElementById(\"computerboard\")\n  const computerCtx = computerCvs.getContext(\"2d\")\n  const playerCvs = getElementById(\"playerboard\")\n  const playerCtx = playerCvs.getContext(\"2d\")\n\n  drawCanvas(computerCtx, \"#d4b4b4\")\n  placeShipsRandomly(computerBoard.ships)\n\n  computerCvs.addEventListener(\"click\", attack)\n}\n\nfunction generateComputerBoardUi() {\n  const field = getElementById(\"field\")\n  let attackDiv = attackScreen()\n\n  field.appendChild(attackDiv)\n  getElementById(\n    \"attackScreen\"\n  ).innerHTML = `<canvas id=\"computerboard\" class=\" \" width=\"${\n    cellSize * 10\n  }\" height=\"${cellSize * 10}\"></canvas>`\n}\n\nfunction attackScreen() {\n  const div = createElement(\"div\")\n  div.setAttribute(\"id\", \"attackScreen\")\n  div.setAttribute(\"class\", \"attackScreen\")\n  div.classList.add(\"relative\", \"flex\", \"w-fit\")\n  return div\n}\n\n//function that  check if position has been shoot previously\n\nfunction placeShipsRandomly(ships) {\n  ships.forEach((ship) => {\n    let length = ship.length\n    let orientation = getRandomDirection()\n    ship.direction = orientation\n\n    // console.log(ship, length, orientation)\n\n    let newPosition = {\n      x: getRandomNumber(),\n      y: getRandomNumber(),\n    }\n\n    let wellPlaced = canPlaceShip(\n      computerBoard.board,\n      newPosition.x * cellSize,\n      newPosition.y * cellSize,\n      length,\n      orientation,\n      cellSize\n    )\n\n    // console.log(ship, length, newPosition, orientation)\n\n    while (!wellPlaced) {\n      newPosition = {\n        x: getRandomNumber(),\n        y: getRandomNumber(),\n      }\n\n      wellPlaced = canPlaceShip(\n        computerBoard.board,\n        newPosition.x * cellSize,\n        newPosition.y * cellSize,\n        length,\n        orientation,\n        cellSize\n      )\n    }\n\n    ship.left = newPosition.x * cellSize\n    ship.top = newPosition.y * cellSize\n    computerBoard.placeShip(ship, newPosition.x, newPosition.y, orientation)\n  })\n  // console.log(computerBoard.board)\n}\nasync function attack(e) {\n  const computerCvs = document.getElementById(\"computerboard\")\n  const computerCtx = computerCvs.getContext(\"2d\")\n  const playerCvs = document.getElementById(\"playerboard\")\n  const playerCtx = playerCvs.getContext(\"2d\")\n\n  let playerKill = playerShoot(\n    e,\n    computerCvs,\n    computerCtx,\n    cellSize,\n    computerBoard.getBoard(),\n    document.getElementById(\"attackScreen\"),\n    computerBoard\n  )\n\n  if (playerKill) return // player plays again\n\n  computerCvs.removeEventListener(\"click\", attack)\n\n  await new Promise((resolve) => setTimeout(resolve, 1500)) // Delay between computer shots\n\n  let cell\n  let result\n\n  do {\n    if (isHunting) {\n      cell = shootCellRandomly(playerboard)\n    } else {\n      cell = targetCells.shift()\n      if (!cell) {\n        isHunting = true\n        cell = shootCellRandomly(playerboard)\n      }\n    }\n\n    result = computerShoot(\n      playerboard,\n      playerCtx,\n      cell,\n      document.getElementById(\"strategyscreen\")\n    )\n\n    if (result) {\n      lastHitCell = cell\n      isHunting = false\n      targetCells = getTargetCells(cell)\n    }\n\n    await new Promise((resolve) => setTimeout(resolve, 1500)) // Delay between computer shots\n  } while (result) // Continue shooting if hit\n\n  computerCvs.addEventListener(\"click\", attack)\n}\n\nfunction shootCellRandomly(gameBoard) {\n  let cell\n\n  do {\n    cell = randomCell()\n  } while (gameBoard.checkIfPositionHasBeenHit([cell.x, cell.y]))\n\n  return cell\n}\n\nfunction getTargetCells(cell) {\n  return getAdjacentCells(cell).filter(\n    (c) => !playerboard.checkIfPositionHasBeenHit([c.x, c.y])\n  )\n}\n\nfunction getAdjacentCells(cell) {\n  let arr = []\n\n  if (cell.x - 1 >= 0) arr.push({ x: cell.x - 1, y: cell.y })\n  if (cell.x + 1 < 10) arr.push({ x: cell.x + 1, y: cell.y })\n  if (cell.y - 1 >= 0) arr.push({ x: cell.x, y: cell.y - 1 })\n  if (cell.y + 1 < 10) arr.push({ x: cell.x, y: cell.y + 1 })\n\n  return arr\n}\n","import logoSrc from \"../asset/images/logo.png\"\nimport oceanSoundSrc from \"../asset/sound/ocean.mp3\"\n\nconst {\n  htmlStructure,\n  getRandomDirection,\n  getRandomNumber,\n  canPlaceShip,\n} = require(\"../bin2/game\")\nconst { drawCanvas, cellSize } = require(\"../bin2/domevents\")\nconst { Gameboard } = require(\"./factories/Gameboard\")\n\nimport {\n  querySelectorAll,\n  getElementById,\n  hideElement,\n  flexElement,\n  newMessage,\n} from \"./DOM/utilities\"\nimport { initializeComputer } from \"./comDom\"\n\nexport const playerboard = new Gameboard()\nexport const computerBoard = new Gameboard()\n\nplayerboard.setOpponentName(\"Computer\")\ncomputerBoard.setOpponentName(\"Player\")\n;(function () {\n  htmlStructure()\n  getElementById(\"logo\").src = logoSrc\n\n  setupPlayerField()\n  const oceanSound = new Audio(oceanSoundSrc)\n\n  const playerCvs = document.getElementById(\"playerboard\")\n  const playerCtx = playerCvs.getContext(\"2d\")\n\n  const startMessage = [\n    \"Begin by setting up a formation\",\n    \"Drag and Drop your ships in your country water\",\n    \"You can arrange your ships in a vertical or horizontal position by using the X axis or Y axis Button\",\n    \"All the best with your formation\",\n  ]\n\n  newMessage(\"message\", startMessage)\n\n  //draw player canvas\n  drawCanvas(playerCtx, \"#b4b4ff\")\n\n  //axis\n  let xAxis = document.getElementById(\"axis-x\")\n  let yAxis = document.getElementById(\"axis-y\")\n\n  let orientation = \"horizontal\"\n\n  xAxis.addEventListener(\"click\", () => {\n    horizontalAxis()\n    console.log(orientation)\n  })\n  yAxis.addEventListener(\"click\", () => {\n    verticalAxis()\n    console.log(orientation)\n  })\n\n  // draw player ships and add ships\n  playerboard.ships.forEach((ship) => {\n    ship.shipUi()\n  })\n\n  let shipTokens = querySelectorAll(\"token\")\n  console.log(shipTokens)\n  let wellPlaced = true\n  let allShipPlaced = checkAllTokenPlaced\n\n  shipTokens.forEach((token) => {\n    token.addEventListener(\"dragstart\", dragStart)\n    token.addEventListener(\"dragend\", dragEnd)\n  })\n\n  const strategyscreen = document.getElementById(\"strategyscreen\")\n  const packs = document.querySelectorAll(\".pack\")\n\n  strategyscreen.addEventListener(\"dragover\", dragOverBoard)\n\n  strategyscreen.addEventListener(\"drop\", dropOnBoard)\n\n  packs.forEach((pack) => {\n    pack.addEventListener(\"dragover\", dragOverPack)\n  })\n\n  let randomBTN = getElementById(\"randomBTN\")\n  randomBTN.addEventListener(\"click\", () => {\n    let tokens = document.querySelectorAll(\".token\")\n    let strategyscreen = document.getElementById(\"strategyscreen\")\n    let placedTokens = document.querySelectorAll(\"#strategyscreen .onboard\")\n    let packedTokens = document.querySelectorAll(\".pack .token\")\n    packedTokens.forEach((token) => token.remove())\n    placedTokens.forEach((token) => token.remove())\n    playOceanSound()\n\n    playerboard.clearBoard()\n\n    tokens.forEach((token) => {\n      let wellPlaced = true\n      let tokenName = token.getAttribute(\"data-name\")\n      let orientation = getRandomDirection()\n      let length = parseInt(token.getAttribute(\"data-length\"))\n\n      //add the orientation class to draggedToken\n\n      let newPosition = {\n        x: getRandomNumber() * cellSize,\n        y: getRandomNumber() * cellSize,\n      }\n\n      wellPlaced = canPlaceShip(\n        playerboard.board,\n        newPosition.x,\n        newPosition.y,\n        length,\n        orientation,\n        cellSize\n      )\n\n      while (!wellPlaced) {\n        newPosition = {\n          x: getRandomNumber() * cellSize,\n          y: getRandomNumber() * cellSize,\n        }\n\n        wellPlaced = canPlaceShip(\n          playerboard.board,\n          newPosition.x,\n          newPosition.y,\n          length,\n          orientation,\n          cellSize\n        )\n      }\n\n      token.style.top = `${newPosition.y}px`\n      token.style.left = `${newPosition.x}px`\n      token.style.position = \"absolute\"\n      token.setAttribute(\"data-direction\", orientation)\n      if (orientation === \"vertical\") {\n        token.classList.add(\"vertical\")\n      } else {\n        token.classList.remove(\"vertical\")\n      }\n      token.classList.add(\"onboard\")\n      strategyscreen.appendChild(token)\n\n      let draggedShip = playerboard.getShip(tokenName)\n      draggedShip.left = newPosition.x\n      draggedShip.top = newPosition.y\n      draggedShip.direction = orientation\n      playerboard.placeShip(\n        draggedShip,\n        newPosition.x / cellSize,\n        newPosition.y / cellSize,\n        orientation\n      )\n    })\n    const randomFormation = [\n      \"Your Ships have been placed randomly\",\n      \"Not fine with the formation? click Random, else, Start! now\",\n    ]\n\n    newMessage(\"message\", randomFormation)\n    // console.log(playerboard.board)\n  })\n\n  let startBTN = getElementById(\"startBTN\")\n  startBTN.addEventListener(\"click\", () => {\n    if (allShipPlaced() && wellPlaced) {\n      hideElement(getElementById(\"port\"))\n      hideElement(getElementById(\"axis-section\"))\n      hideElement(getElementById(\"cta\"))\n      flexElement(getElementById(\"restartDiv\"))\n\n      querySelectorAll(\"token\").forEach((token) => {\n        removeDragEvents(token)\n      })\n\n      const startMessage = [\n        \"Fight!!! Now\",\n        \"Shoot any position on your enemies water to destroy enemies ship\",\n        \"Remember, Ships are placed Horizontally and Vertically Only\",\n      ]\n\n      newMessage(\"message\", startMessage, true)\n\n      getElementById(\"playerboard\").classList.add(\"bringFront\")\n      initializeComputer()\n      playOceanSound()\n    } else {\n      alert(\"Fix Board: click 'Random' button to set up ships randomly\")\n    }\n  })\n\n  function playOceanSound() {\n    oceanSound.play().catch((error) => {\n      console.error(\"Error playing the sound:\", error)\n    })\n    oceanSound.loop = true\n  }\n\n  function dragStart(e) {\n    this.classList.add(\"dragging\")\n  }\n\n  function dragEnd(e) {\n    this.classList.remove(\"dragging\")\n  }\n\n  function dragOverBoard(e) {\n    e.preventDefault()\n\n    const draggedToken = document.querySelector(\".dragging\")\n    const currentX = parseInt(draggedToken.style.left) / cellSize\n    const currentY = parseInt(draggedToken.style.top) / cellSize\n    const length = parseInt(draggedToken.getAttribute(\"data-length\"))\n    const direction = draggedToken.getAttribute(\"data-direction\")\n    const shipName = draggedToken.getAttribute(\"data-name\")\n\n    //if the token is already on the board,\n    // Remove it from its current position\n    if (\n      draggedToken.classList.contains(\"onboard\") &&\n      draggedToken.classList.contains(draggedToken.getAttribute(\"data-name\"))\n    ) {\n      playerboard.removeShip(shipName, currentX, currentY, length, direction)\n    }\n\n    let newPosition = playerboard.calculateNewPosition(\n      e,\n      playerCvs,\n      draggedToken\n    )\n\n    //get the cell position of the dragged token in the canvas\n\n    if (orientation === \"vertical\") {\n      draggedToken.classList.add(\"vertical\")\n    } else {\n      draggedToken.classList.remove(\"vertical\")\n    }\n    //add the orientation class to draggedToken\n\n    //check if canPlace ship\n    //if it not return to previous state\n    if (\n      !canPlaceShip(\n        playerboard.board,\n        newPosition.x,\n        newPosition.y,\n        length,\n        orientation,\n        cellSize\n      )\n    ) {\n      draggedToken.classList.add(\"errorBorder\")\n      let draggedShip = playerboard.getShip(\n        draggedToken.getAttribute(\"data-name\")\n      )\n      draggedToken.setAttribute(\"data-direction\", direction)\n      //set previous direction\n      if (direction === \"vertical\") {\n        draggedToken.classList.add(\"vertical\")\n        draggedToken.classList.remove(\"errorBorder\")\n      } else {\n        draggedToken.classList.remove(\"vertical\")\n        draggedToken.classList.remove(\"errorBorder\")\n      }\n      console.log(wellPlaced)\n      playerboard.placeShip(draggedShip, currentX, currentY, direction)\n      return\n    }\n    draggedToken.classList.remove(\"errorBorder\")\n  }\n\n  function dropOnBoard(e) {\n    const draggedToken = document.querySelector(\".dragging\")\n    const length = parseInt(draggedToken.getAttribute(\"data-length\"))\n\n    let newPosition = playerboard.calculateNewPosition(\n      e,\n      playerCvs,\n      draggedToken\n    )\n\n    if (\n      canPlaceShip(\n        playerboard.board,\n        newPosition.x,\n        newPosition.y,\n        length,\n        orientation,\n        cellSize\n      )\n    ) {\n      console.log(draggedToken)\n      draggedToken.classList.remove(\"errorBorder\")\n      draggedToken.style.top = `${newPosition.y}px`\n      draggedToken.style.left = `${newPosition.x}px`\n      draggedToken.style.position = \"absolute\"\n      draggedToken.setAttribute(\"data-direction\", orientation)\n      draggedToken.classList.add(\"onboard\")\n      strategyscreen.appendChild(draggedToken)\n\n      let draggedShip = playerboard.getShip(\n        draggedToken.getAttribute(\"data-name\")\n      )\n      draggedShip.left = newPosition.x\n      draggedShip.top = newPosition.y\n      draggedShip.direction = orientation\n      playerboard.placeShip(\n        draggedShip,\n        newPosition.x / cellSize,\n        newPosition.y / cellSize,\n        orientation\n      )\n      wellPlaced = true\n      console.log(wellPlaced)\n    }\n\n    console.log(playerboard.board)\n    // console.log(draggedShip)\n  }\n\n  function dragOverPack(e) {\n    e.preventDefault()\n\n    const draggedToken = document.querySelector(\".dragging\")\n    const length = parseInt(draggedToken.getAttribute(\"data-length\"))\n    const currentX = parseInt(draggedToken.style.left) / cellSize\n    const currentY = parseInt(draggedToken.style.top) / cellSize\n    const direction = draggedToken.getAttribute(\"data-direction\")\n    const shipName = draggedToken.getAttribute(\"data-name\")\n\n    if (this.children.length > 0) return\n    playerboard.removeShip(shipName, currentX, currentY, length, direction)\n    draggedToken.style.top = 0\n    draggedToken.style.left = 0\n    draggedToken.style.position = \"\"\n    draggedToken.classList.remove(\"vertical\", \"onboard\")\n    draggedToken.setAttribute(\"data-direction\", \"horizontal\")\n    this.appendChild(draggedToken)\n\n    let draggedShip = playerboard.getShip(shipName)\n    draggedShip.left = 0\n    draggedShip.top = 0\n    draggedShip.direction = \"horizontal\"\n  }\n\n  //switch buttons\n  const switchActive = (off, on) => {\n    off.classList.remove(\"active\")\n    on.classList.add(\"active\")\n  }\n\n  const horizontalAxis = () => {\n    yAxis.style.backgroundColor = \"\"\n    switchActive(yAxis, xAxis)\n    return (orientation = \"horizontal\")\n  }\n  const verticalAxis = () => {\n    xAxis.style.backgroundColor = \"\"\n    switchActive(xAxis, yAxis)\n    return (orientation = \"vertical\")\n  }\n\n  function checkAllTokenPlaced() {\n    let shipTokens = document.querySelectorAll(\"#strategyscreen .token\")\n    return shipTokens.length === 5\n  }\n\n  function playerFieldUi() {\n    return `\n\n            <div id=\"battlefield\" class=\"board w-full\">\n            <div id=\"port\" class=\"hidden md:inline-flex flex-col float-left flex-wrap w-52 gap-x-5 gap-y-10 mr-6\">\n                <div class=\"carrier-port pack placeable  h-9 \">\n                    \n                </div>\n                <div class=\"battleship-port pack placeable  h-9 \">\n                    \n                </div>\n                <div class=\"destroyer-port pack placeable  h-9\">\n                    \n                </div>\n                <div class=\"submarine-port pack placeable  h-9 \">\n                    \n                    \n                </div>\n                <div class=\"patrol-port pack placeable  h-9 \">\n                    \n                    \n                    \n                </div>\n                \n            </div>\n            <div id=\"field\" class=\"flex flex-col justify-items-center\">\n              <div id=\"axis-section\" class=\"hidden md:flex gap-4 w-[360px] justify-center mb-4\">\n                <div id=\"axis-x\" class=\"btn axis-x px-6 py-1 border border-1 border-blue-600 rounded-lg active\">X axis</div>\n                <div id=\"axis-y\" class=\"btn axis-y px-6 py-1 border border-1 border-blue-600 rounded-lg\">Y axis</div>\n              </div>\n              <div id=\"strategyscreen\" class=\"placeable relative flex w-fit\">\n                  <canvas id=\"playerboard\" class=\" \" width=\"${\n                    cellSize * 10\n                  }\" height=\"${cellSize * 10}\"></canvas>\n              </div>\n              <div id=\"cta\" class=\"flex gap-4 w-[360px] justify-center mt-4\">\n                <div id=\"randomBTN\" class=\"btn  px-6 py-1 border border-1 border-blue-600 rounded-lg\">Random</div>\n                <div id=\"startBTN\" class=\"btn  px-6 py-1 border border-1 border-green-600 rounded-lg play\">Start</div>\n              </div>\n            </div>\n            <div id=\"restartDiv\" class=\"flex gap-4 justify-center mt-4\">\n                \n                <div id=\"restartBTN\" onclick = \"location.reload()\" class=\"btn  px-6 py-1 text-white bg-red-600 border border-1 border-red-600 rounded-lg restart\">Restart</div>\n              </div>\n\n        </div>\n        \n        `\n  }\n\n  function setupPlayerField() {\n    const main = getElementById(\"body-container\")\n    main.innerHTML = playerFieldUi()\n    hideElement(getElementById(\"restartDiv\"))\n  }\n\n  //function that removes all events from token\n  function removeDragEvents(token) {\n    token.removeEventListener(\"dragstart\", dragStart)\n    token.removeEventListener(\"dragend\", dragEnd)\n    token.setAttribute(\"draggable\", \"false\")\n    token.style.cursor = \"default\"\n  }\n})()\n"],"names":["bodyStyle","getComputedStyle","document","body","cellSize","parseFloat","getPropertyValue","trim","drawCanvas","elem","color","board","spaceSize","id","i","j","strokeStyle","strokeRect","console","log","module","exports","htmlStructure","innerHTML","getRandomDirection","Math","random","getRandomNumber","floor","canPlaceShip","xPosition","yPosition","shipLength","direction","xCord","parseInt","yCord","require","data","Ship","_require3","Gameboard","isColliding","isWithinBounds","orientation","_classCallCheck","this","opponentName","ships","missedShots","Set","positionShot","Array","fill","map","hitShot","key","value","name","playerName","ship","startX","startY","length","push","x","y","target","addToPositionShot","add","toString","hit","array","string","shipName","getShip","every","isSunk","_hash","e","canvas","draggedToken","newX","clientX","getBoundingClientRect","newY","clientY","width","clientWidth","height","clientHeight","max","min","position","has","hits","sunk","top","left","shipPort","querySelector","concat","appendChild","createTokenDiv","div","createElement","setAttribute","className","style","xImage","Image","src","xSrc","dotImage","dotSrc","dot2Image","dot2Src","hitSound","Audio","hitSoundSrc","playbackRate","shotSound","shotSoundSrc","missSound","missSoundSrc","getElementById","querySelectorAll","hideElement","element","display","playerShoot","event","ctx","placeable","gameboard","X","Y","checkIfPositionHasBeenHit","playShotSound","drawOnBoard","computerShoot","opponent","randomPosition","Object","values","randomCell","result","img","getOpponentName","drawImage","receiveAttack","tokenDiv","cursor","classList","currentTime","play","allShipSunk","dialog","newMessage","addEventListener","location","reload","displayGameOverDialogue","typedInstance","loop","arguments","undefined","typeSpeed","destroy","Typed","strings","backSpeed","backDelay","_regeneratorRuntime","t","r","prototype","n","hasOwnProperty","o","defineProperty","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","isHunting","targetCells","attack","_x","_attack","apply","_callee","computerCvs","computerCtx","playerCvs","playerCtx","cell","_context","getContext","computerBoard","getBoard","removeEventListener","setTimeout","shootCellRandomly","playerboard","shift","getTargetCells","_next","_throw","gameBoard","arr","getAdjacentCells","filter","_require","_require2","setOpponentName","logoSrc","oceanSound","oceanSoundSrc","xAxis","yAxis","horizontalAxis","verticalAxis","shipUi","shipTokens","wellPlaced","token","dragStart","dragEnd","strategyscreen","packs","playOceanSound","error","remove","dragOverPack","preventDefault","getAttribute","currentX","currentY","children","removeShip","draggedShip","contains","newPosition","calculateNewPosition","placeShip","pack","tokens","placedTokens","clearBoard","tokenName","removeDragEvents","field","attackDiv","replace","initializeComputer","alert","switchActive","off","on","backgroundColor"],"sourceRoot":""}